{"ast":null,"code":"var _jsxFileName = \"/home/nawazz/golang/codedamn projects/todo-list-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './App.css';\nimport { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todoList, setTodoList] = useState([]);\n  const [currentTask, setCurrentTask] = useState(\"\");\n  const inputTask = useRef(null);\n\n  const addTask = event => {\n    setTodoList([...todoList, {\n      task: currentTask,\n      completed: false\n    }]);\n    console.log(todoList);\n    inputTask.current.value = \"\";\n    setCurrentTask(\"\");\n  };\n\n  const deleteTask = taskToDelete => {\n    setTodoList(todoList.filter(task => {\n      return task.task !== taskToDelete;\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" To-do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputTask,\n        type: \"text\",\n        placeholder: \"Task...\",\n        onChange: event => {\n          setCurrentTask(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \" Add Task \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todoList.map((val, key) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"task\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" \", val.task, \" \"]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => taskCompleted(val.completed),\n            children: \" Completed \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteTask(val.task),\n            children: \" Delete \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), val.completed ? /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \" Task Completed \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \" Task not Completed \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 61\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"+XpmO1moufunxYXFUuX0SMtiN1k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","App","todoList","setTodoList","currentTask","setCurrentTask","inputTask","addTask","event","task","completed","console","log","current","value","deleteTask","taskToDelete","filter","target","map","val","key","taskCompleted"],"sources":["/home/nawazz/golang/codedamn projects/todo-list-react/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport { useState, useRef } from 'react';\n\nfunction App() {\n  const [todoList, setTodoList] = useState([])\n  const [currentTask, setCurrentTask] = useState(\"\")\n  const inputTask = useRef(null);\n\n\n  const addTask = (event) => {\n    setTodoList([...todoList,{task: currentTask, completed: false }]);\n    console.log(todoList);\n    inputTask.current.value= \"\";\n    setCurrentTask(\"\")\n  }\n\n  const deleteTask = (taskToDelete) => {\n    setTodoList(\n      todoList.filter((task) => {\n      return task.task !== taskToDelete;\n    }));\n  };\n  return (\n    <div className=\"App\">\n      <h1> To-do List</h1>\n      <div>\n       \n        <input \n         ref={inputTask}\n        type=\"text\" placeholder=\"Task...\" onChange={(event) => {\n          setCurrentTask(event.target.value);\n        }} />\n        <button onClick={addTask}> Add Task </button>\n\n      </div>\n      <hr />\n      <ul>\n        {todoList.map((val,key) => {\n          return ( \n          <div id=\"task\">\n            <li key={key}> {val.task} </li>\n            <button onClick={() => taskCompleted(val.completed)}> Completed </button>\n            <button onClick={() => deleteTask(val.task)}> Delete </button>\n            {val.completed ? (<h1> Task Completed </h1>) : (<h1> Task not Completed </h1>) }\n          </div>)\n        })}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAMO,SAAS,GAAGN,MAAM,CAAC,IAAD,CAAxB;;EAGA,MAAMO,OAAO,GAAIC,KAAD,IAAW;IACzBL,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAa;MAACO,IAAI,EAAEL,WAAP;MAAoBM,SAAS,EAAE;IAA/B,CAAb,CAAD,CAAX;IACAC,OAAO,CAACC,GAAR,CAAYV,QAAZ;IACAI,SAAS,CAACO,OAAV,CAAkBC,KAAlB,GAAyB,EAAzB;IACAT,cAAc,CAAC,EAAD,CAAd;EACD,CALD;;EAOA,MAAMU,UAAU,GAAIC,YAAD,IAAkB;IACnCb,WAAW,CACTD,QAAQ,CAACe,MAAT,CAAiBR,IAAD,IAAU;MAC1B,OAAOA,IAAI,CAACA,IAAL,KAAcO,YAArB;IACD,CAFC,CADS,CAAX;EAID,CALD;;EAMA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,wBAEE;QACC,GAAG,EAAEV,SADN;QAEA,IAAI,EAAC,MAFL;QAEY,WAAW,EAAC,SAFxB;QAEkC,QAAQ,EAAGE,KAAD,IAAW;UACrDH,cAAc,CAACG,KAAK,CAACU,MAAN,CAAaJ,KAAd,CAAd;QACD;MAJD;QAAA;QAAA;QAAA;MAAA,QAFF,eAOE;QAAQ,OAAO,EAAEP,OAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAYE;MAAA;MAAA;MAAA;IAAA,QAZF,eAaE;MAAA,UACGL,QAAQ,CAACiB,GAAT,CAAa,CAACC,GAAD,EAAKC,GAAL,KAAa;QACzB,oBACA;UAAK,EAAE,EAAC,MAAR;UAAA,wBACE;YAAA,gBAAgBD,GAAG,CAACX,IAApB;UAAA,GAASY,GAAT;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAQ,OAAO,EAAE,MAAMC,aAAa,CAACF,GAAG,CAACV,SAAL,CAApC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF,eAGE;YAAQ,OAAO,EAAE,MAAMK,UAAU,CAACK,GAAG,CAACX,IAAL,CAAjC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAHF,EAIGW,GAAG,CAACV,SAAJ,gBAAiB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAjB,gBAA+C;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAJlD;QAAA;UAAA;UAAA;UAAA;QAAA,QADA;MAOD,CARA;IADH;MAAA;MAAA;MAAA;IAAA,QAbF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA2BD;;GA9CQT,G;;KAAAA,G;AAgDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}